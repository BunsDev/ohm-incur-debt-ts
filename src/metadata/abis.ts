export const BorrowerData = [
    "tuple(uint128 debt, uint128 limit, uint128 collateralInGOHM, uint128 wrappedGOHM, bool isNonLpBorrower, bool isLpBorrower)",
];

export const IncurDebtABI = [
    "function deposit(uint256)",
    "function borrow(uint256)",
    "function createLP(uint256, address, bytes) returns (uint256)",
    "function removeLP(uint256, address, address, bytes) returns (uint256)",
    "function withdrawLP(uint256, address)",
    "function withdraw(uint256)",
    "function repayDebtWithCollateral() public",
    "function repayDebtWithCollateralAndWithdrawTheRest()",
    "function repayDebtWithOHM(uint256 _ohmAmount)",
    "function getAvailableToBorrow() view returns (uint256)",
    "function totalOutstandingGlobalDebt() view returns (uint256)",
    "function lpTokenOwnership(address, address) view returns (uint256)",
    `function borrowers(address) view returns (${BorrowerData})`,
];

export const StableSwapABI = [
    "function coins(uint256) view returns (address)",
    "function balances(uint256) view returns (address)",
    "function calc_token_amount(uint256[2], bool) view returns (uint256)",
];

export const UniswapV2ABI = [
    "function token0() view returns (address)",
    "function token1() view returns (address)",
    "function getReserves() view returns (uint112, uint112, uint32)",
];

export const JoinPoolRequest = [
    "tuple(address[] assets, uint256[] maxAmountsIn, bytes userData, bool fromInternalBalance)",
];

export const BalancerHelpersABI = [
    `function queryJoin(bytes32, address, address, ${JoinPoolRequest}) returns (uint256, uint256[])`,
];

export const BalancerVaultABI = [
    "function getPoolTokens(bytes32) view returns (IERC20[], uint256[], uint256)",
];

export const ERC20ABI = [
    "function approve(address, uint256) returns (bool)",
    "function transferFrom(address, address, uint256) returns (bool)",
    "function transfer(address, uint256) returns (bool)",
    "function totalSupply() view returns (uint256)",
    "function balanceOf(address) view returns (uint256)",
    "function decimals() view returns(uint256)",
    "function allowance(address, address) view returns (uint256)",
];

export const UniV2PoolABI = [
    {
        inputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "Burn",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1",
                type: "uint256",
            },
        ],
        name: "Mint",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0In",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1In",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount0Out",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount1Out",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "Swap",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint112",
                name: "reserve0",
                type: "uint112",
            },
            {
                indexed: false,
                internalType: "uint112",
                name: "reserve1",
                type: "uint112",
            },
        ],
        name: "Sync",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        constant: true,
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "MINIMUM_LIQUIDITY",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [
            { internalType: "address", name: "", type: "address" },
            { internalType: "address", name: "", type: "address" },
        ],
        name: "allowance",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "approve",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "balanceOf",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "burn",
        outputs: [
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "decimals",
        outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "factory",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "getReserves",
        outputs: [
            { internalType: "uint112", name: "_reserve0", type: "uint112" },
            { internalType: "uint112", name: "_reserve1", type: "uint112" },
            {
                internalType: "uint32",
                name: "_blockTimestampLast",
                type: "uint32",
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "address", name: "_token0", type: "address" },
            { internalType: "address", name: "_token1", type: "address" },
        ],
        name: "initialize",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "kLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "mint",
        outputs: [
            { internalType: "uint256", name: "liquidity", type: "uint256" },
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "name",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [{ internalType: "address", name: "", type: "address" }],
        name: "nonces",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
        ],
        name: "permit",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "price0CumulativeLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "price1CumulativeLast",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [{ internalType: "address", name: "to", type: "address" }],
        name: "skim",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "uint256", name: "amount0Out", type: "uint256" },
            { internalType: "uint256", name: "amount1Out", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "bytes", name: "data", type: "bytes" },
        ],
        name: "swap",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "symbol",
        outputs: [{ internalType: "string", name: "", type: "string" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [],
        name: "sync",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "token0",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "token1",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "totalSupply",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "transfer",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: false,
        inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
        ],
        name: "transferFrom",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
];

export const BalancerVaultsABI = [
    {
        inputs: [
            {
                internalType: "contract IAuthorizer",
                name: "authorizer",
                type: "address",
            },
            { internalType: "contract IWETH", name: "weth", type: "address" },
            {
                internalType: "uint256",
                name: "pauseWindowDuration",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bufferPeriodDuration",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract IAuthorizer",
                name: "newAuthorizer",
                type: "address",
            },
        ],
        name: "AuthorizerChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "ExternalBalanceTransfer",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract IFlashLoanRecipient",
                name: "recipient",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "feeAmount",
                type: "uint256",
            },
        ],
        name: "FlashLoan",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "user",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "delta",
                type: "int256",
            },
        ],
        name: "InternalBalanceChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "paused",
                type: "bool",
            },
        ],
        name: "PausedStateChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "liquidityProvider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "int256[]",
                name: "deltas",
                type: "int256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "protocolFeeAmounts",
                type: "uint256[]",
            },
        ],
        name: "PoolBalanceChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "assetManager",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "cashDelta",
                type: "int256",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "managedDelta",
                type: "int256",
            },
        ],
        name: "PoolBalanceManaged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "poolAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "enum IVault.PoolSpecialization",
                name: "specialization",
                type: "uint8",
            },
        ],
        name: "PoolRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "relayer",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "approved",
                type: "bool",
            },
        ],
        name: "RelayerApprovalChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "tokenIn",
                type: "address",
            },
            {
                indexed: true,
                internalType: "contract IERC20",
                name: "tokenOut",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
            },
        ],
        name: "Swap",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
        ],
        name: "TokensDeregistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "poolId",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
            {
                indexed: false,
                internalType: "address[]",
                name: "assetManagers",
                type: "address[]",
            },
        ],
        name: "TokensRegistered",
        type: "event",
    },
    {
        inputs: [],
        name: "WETH",
        outputs: [
            { internalType: "contract IWETH", name: "", type: "address" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum IVault.SwapKind",
                name: "kind",
                type: "uint8",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "poolId",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "assetInIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "assetOutIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swaps",
                type: "tuple[]",
            },
            {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "fromInternalBalance",
                        type: "bool",
                    },
                    {
                        internalType: "address payable",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "toInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.FundManagement",
                name: "funds",
                type: "tuple",
            },
            { internalType: "int256[]", name: "limits", type: "int256[]" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
        ],
        name: "batchSwap",
        outputs: [
            { internalType: "int256[]", name: "assetDeltas", type: "int256[]" },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            {
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
        ],
        name: "deregisterTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            { internalType: "address", name: "sender", type: "address" },
            {
                internalType: "address payable",
                name: "recipient",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "contract IAsset[]",
                        name: "assets",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "minAmountsOut",
                        type: "uint256[]",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                    {
                        internalType: "bool",
                        name: "toInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.ExitPoolRequest",
                name: "request",
                type: "tuple",
            },
        ],
        name: "exitPool",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IFlashLoanRecipient",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
            { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
            { internalType: "bytes", name: "userData", type: "bytes" },
        ],
        name: "flashLoan",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "bytes4", name: "selector", type: "bytes4" }],
        name: "getActionId",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAuthorizer",
        outputs: [
            { internalType: "contract IAuthorizer", name: "", type: "address" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDomainSeparator",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "user", type: "address" },
            {
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
        ],
        name: "getInternalBalance",
        outputs: [
            { internalType: "uint256[]", name: "balances", type: "uint256[]" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "address", name: "user", type: "address" }],
        name: "getNextNonce",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPausedState",
        outputs: [
            { internalType: "bool", name: "paused", type: "bool" },
            {
                internalType: "uint256",
                name: "pauseWindowEndTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "bufferPeriodEndTime",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "bytes32", name: "poolId", type: "bytes32" }],
        name: "getPool",
        outputs: [
            { internalType: "address", name: "", type: "address" },
            {
                internalType: "enum IVault.PoolSpecialization",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            { internalType: "contract IERC20", name: "token", type: "address" },
        ],
        name: "getPoolTokenInfo",
        outputs: [
            { internalType: "uint256", name: "cash", type: "uint256" },
            { internalType: "uint256", name: "managed", type: "uint256" },
            {
                internalType: "uint256",
                name: "lastChangeBlock",
                type: "uint256",
            },
            { internalType: "address", name: "assetManager", type: "address" },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "bytes32", name: "poolId", type: "bytes32" }],
        name: "getPoolTokens",
        outputs: [
            {
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
            { internalType: "uint256[]", name: "balances", type: "uint256[]" },
            {
                internalType: "uint256",
                name: "lastChangeBlock",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getProtocolFeesCollector",
        outputs: [
            {
                internalType: "contract ProtocolFeesCollector",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "user", type: "address" },
            { internalType: "address", name: "relayer", type: "address" },
        ],
        name: "hasApprovedRelayer",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "recipient", type: "address" },
            {
                components: [
                    {
                        internalType: "contract IAsset[]",
                        name: "assets",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "maxAmountsIn",
                        type: "uint256[]",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                    {
                        internalType: "bool",
                        name: "fromInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.JoinPoolRequest",
                name: "request",
                type: "tuple",
            },
        ],
        name: "joinPool",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum IVault.PoolBalanceOpKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "poolId",
                        type: "bytes32",
                    },
                    {
                        internalType: "contract IERC20",
                        name: "token",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                ],
                internalType: "struct IVault.PoolBalanceOp[]",
                name: "ops",
                type: "tuple[]",
            },
        ],
        name: "managePoolBalance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum IVault.UserBalanceOpKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        internalType: "contract IAsset",
                        name: "asset",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "address payable",
                        name: "recipient",
                        type: "address",
                    },
                ],
                internalType: "struct IVault.UserBalanceOp[]",
                name: "ops",
                type: "tuple[]",
            },
        ],
        name: "manageUserBalance",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum IVault.SwapKind",
                name: "kind",
                type: "uint8",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "poolId",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "assetInIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "assetOutIndex",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                ],
                internalType: "struct IVault.BatchSwapStep[]",
                name: "swaps",
                type: "tuple[]",
            },
            {
                internalType: "contract IAsset[]",
                name: "assets",
                type: "address[]",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "fromInternalBalance",
                        type: "bool",
                    },
                    {
                        internalType: "address payable",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "toInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.FundManagement",
                name: "funds",
                type: "tuple",
            },
        ],
        name: "queryBatchSwap",
        outputs: [{ internalType: "int256[]", name: "", type: "int256[]" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "enum IVault.PoolSpecialization",
                name: "specialization",
                type: "uint8",
            },
        ],
        name: "registerPool",
        outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            {
                internalType: "contract IERC20[]",
                name: "tokens",
                type: "address[]",
            },
            {
                internalType: "address[]",
                name: "assetManagers",
                type: "address[]",
            },
        ],
        name: "registerTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAuthorizer",
                name: "newAuthorizer",
                type: "address",
            },
        ],
        name: "setAuthorizer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ internalType: "bool", name: "paused", type: "bool" }],
        name: "setPaused",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "relayer", type: "address" },
            { internalType: "bool", name: "approved", type: "bool" },
        ],
        name: "setRelayerApproval",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "poolId",
                        type: "bytes32",
                    },
                    {
                        internalType: "enum IVault.SwapKind",
                        name: "kind",
                        type: "uint8",
                    },
                    {
                        internalType: "contract IAsset",
                        name: "assetIn",
                        type: "address",
                    },
                    {
                        internalType: "contract IAsset",
                        name: "assetOut",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                ],
                internalType: "struct IVault.SingleSwap",
                name: "singleSwap",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "sender",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "fromInternalBalance",
                        type: "bool",
                    },
                    {
                        internalType: "address payable",
                        name: "recipient",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "toInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.FundManagement",
                name: "funds",
                type: "tuple",
            },
            { internalType: "uint256", name: "limit", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
        ],
        name: "swap",
        outputs: [
            {
                internalType: "uint256",
                name: "amountCalculated",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    { stateMutability: "payable", type: "receive" },
];

export const BalancerHelperABI = [
    {
        inputs: [
            {
                internalType: "contract IVault",
                name: "_vault",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "recipient", type: "address" },
            {
                components: [
                    {
                        internalType: "contract IAsset[]",
                        name: "assets",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "minAmountsOut",
                        type: "uint256[]",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                    {
                        internalType: "bool",
                        name: "toInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.ExitPoolRequest",
                name: "request",
                type: "tuple",
            },
        ],
        name: "queryExit",
        outputs: [
            { internalType: "uint256", name: "bptIn", type: "uint256" },
            {
                internalType: "uint256[]",
                name: "amountsOut",
                type: "uint256[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "bytes32", name: "poolId", type: "bytes32" },
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "recipient", type: "address" },
            {
                components: [
                    {
                        internalType: "contract IAsset[]",
                        name: "assets",
                        type: "address[]",
                    },
                    {
                        internalType: "uint256[]",
                        name: "maxAmountsIn",
                        type: "uint256[]",
                    },
                    { internalType: "bytes", name: "userData", type: "bytes" },
                    {
                        internalType: "bool",
                        name: "fromInternalBalance",
                        type: "bool",
                    },
                ],
                internalType: "struct IVault.JoinPoolRequest",
                name: "request",
                type: "tuple",
            },
        ],
        name: "queryJoin",
        outputs: [
            { internalType: "uint256", name: "bptOut", type: "uint256" },
            { internalType: "uint256[]", name: "amountsIn", type: "uint256[]" },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "vault",
        outputs: [
            { internalType: "contract IVault", name: "", type: "address" },
        ],
        stateMutability: "view",
        type: "function",
    },
];

export const CurvePoolABI = [
    {
        inputs: [
            { type: "address", name: "buyer", indexed: true },
            { type: "int128", name: "sold_id", indexed: false },
            { type: "uint256", name: "tokens_sold", indexed: false },
            { type: "int128", name: "bought_id", indexed: false },
            { type: "uint256", name: "tokens_bought", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "TokenExchangeUnderlying",
        inputs: [
            { type: "address", name: "buyer", indexed: true },
            { type: "int128", name: "sold_id", indexed: false },
            { type: "uint256", name: "tokens_sold", indexed: false },
            { type: "int128", name: "bought_id", indexed: false },
            { type: "uint256", name: "tokens_bought", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "AddLiquidity",
        inputs: [
            { type: "address", name: "provider", indexed: true },
            { type: "uint256[2]", name: "token_amounts", indexed: false },
            { type: "uint256[2]", name: "fees", indexed: false },
            { type: "uint256", name: "invariant", indexed: false },
            { type: "uint256", name: "token_supply", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "RemoveLiquidity",
        inputs: [
            { type: "address", name: "provider", indexed: true },
            { type: "uint256[2]", name: "token_amounts", indexed: false },
            { type: "uint256[2]", name: "fees", indexed: false },
            { type: "uint256", name: "token_supply", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "RemoveLiquidityOne",
        inputs: [
            { type: "address", name: "provider", indexed: true },
            { type: "uint256", name: "token_amount", indexed: false },
            { type: "uint256", name: "coin_amount", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "RemoveLiquidityImbalance",
        inputs: [
            { type: "address", name: "provider", indexed: true },
            { type: "uint256[2]", name: "token_amounts", indexed: false },
            { type: "uint256[2]", name: "fees", indexed: false },
            { type: "uint256", name: "invariant", indexed: false },
            { type: "uint256", name: "token_supply", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "CommitNewAdmin",
        inputs: [
            { type: "uint256", name: "deadline", indexed: true },
            { type: "address", name: "admin", indexed: true },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "NewAdmin",
        inputs: [{ type: "address", name: "admin", indexed: true }],
        anonymous: false,
        type: "event",
    },
    {
        name: "CommitNewFee",
        inputs: [
            { type: "uint256", name: "deadline", indexed: true },
            { type: "uint256", name: "fee", indexed: false },
            { type: "uint256", name: "admin_fee", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "NewFee",
        inputs: [
            { type: "uint256", name: "fee", indexed: false },
            { type: "uint256", name: "admin_fee", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "RampA",
        inputs: [
            { type: "uint256", name: "old_A", indexed: false },
            { type: "uint256", name: "new_A", indexed: false },
            { type: "uint256", name: "initial_time", indexed: false },
            { type: "uint256", name: "future_time", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        name: "StopRampA",
        inputs: [
            { type: "uint256", name: "A", indexed: false },
            { type: "uint256", name: "t", indexed: false },
        ],
        anonymous: false,
        type: "event",
    },
    {
        outputs: [],
        inputs: [
            { type: "address", name: "_owner" },
            { type: "address[2]", name: "_coins" },
            { type: "address", name: "_pool_token" },
            { type: "uint256", name: "_A" },
            { type: "uint256", name: "_fee" },
            { type: "uint256", name: "_admin_fee" },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        name: "A",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 5289,
    },
    {
        name: "A_precise",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 5251,
    },
    {
        name: "balances",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [{ type: "uint256", name: "i" }],
        stateMutability: "view",
        type: "function",
        gas: 5076,
    },
    {
        name: "get_virtual_price",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 1114301,
    },
    {
        name: "calc_token_amount",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "uint256[2]", name: "amounts" },
            { type: "bool", name: "is_deposit" },
        ],
        stateMutability: "view",
        type: "function",
        gas: 2218181,
    },
    {
        name: "add_liquidity",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "uint256[2]", name: "amounts" },
            { type: "uint256", name: "min_mint_amount" },
        ],
        stateMutability: "payable",
        type: "function",
        gas: 3484118,
    },
    {
        name: "get_dy",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "int128", name: "i" },
            { type: "int128", name: "j" },
            { type: "uint256", name: "dx" },
        ],
        stateMutability: "view",
        type: "function",
        gas: 2654541,
    },
    {
        name: "exchange",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "int128", name: "i" },
            { type: "int128", name: "j" },
            { type: "uint256", name: "dx" },
            { type: "uint256", name: "min_dy" },
        ],
        stateMutability: "payable",
        type: "function",
        gas: 2810134,
    },
    {
        name: "remove_liquidity",
        outputs: [{ type: "uint256[2]", name: "" }],
        inputs: [
            { type: "uint256", name: "_amount" },
            { type: "uint256[2]", name: "_min_amounts" },
        ],
        stateMutability: "nonpayable",
        type: "function",
        gas: 160545,
    },
    {
        name: "remove_liquidity_imbalance",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "uint256[2]", name: "_amounts" },
            { type: "uint256", name: "_max_burn_amount" },
        ],
        stateMutability: "nonpayable",
        type: "function",
        gas: 3519382,
    },
    {
        name: "calc_withdraw_one_coin",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "uint256", name: "_token_amount" },
            { type: "int128", name: "i" },
        ],
        stateMutability: "view",
        type: "function",
        gas: 1435,
    },
    {
        name: "remove_liquidity_one_coin",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [
            { type: "uint256", name: "_token_amount" },
            { type: "int128", name: "i" },
            { type: "uint256", name: "_min_amount" },
        ],
        stateMutability: "nonpayable",
        type: "function",
        gas: 4113806,
    },
    {
        name: "ramp_A",
        outputs: [],
        inputs: [
            { type: "uint256", name: "_future_A" },
            { type: "uint256", name: "_future_time" },
        ],
        stateMutability: "nonpayable",
        type: "function",
        gas: 151834,
    },
    {
        name: "stop_ramp_A",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 148595,
    },
    {
        name: "commit_new_fee",
        outputs: [],
        inputs: [
            { type: "uint256", name: "new_fee" },
            { type: "uint256", name: "new_admin_fee" },
        ],
        stateMutability: "nonpayable",
        type: "function",
        gas: 110431,
    },
    {
        name: "apply_new_fee",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 153115,
    },
    {
        name: "revert_new_parameters",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 21865,
    },
    {
        name: "commit_transfer_ownership",
        outputs: [],
        inputs: [{ type: "address", name: "_owner" }],
        stateMutability: "nonpayable",
        type: "function",
        gas: 74603,
    },
    {
        name: "apply_transfer_ownership",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 116583,
    },
    {
        name: "revert_transfer_ownership",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 21955,
    },
    {
        name: "withdraw_admin_fees",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 137597,
    },
    {
        name: "donate_admin_fees",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 42144,
    },
    {
        name: "kill_me",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 37938,
    },
    {
        name: "unkill_me",
        outputs: [],
        inputs: [],
        stateMutability: "nonpayable",
        type: "function",
        gas: 22075,
    },
    {
        name: "coins",
        outputs: [{ type: "address", name: "" }],
        inputs: [{ type: "uint256", name: "arg0" }],
        stateMutability: "view",
        type: "function",
        gas: 2160,
    },
    {
        name: "admin_balances",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [{ type: "uint256", name: "arg0" }],
        stateMutability: "view",
        type: "function",
        gas: 2190,
    },
    {
        name: "fee",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2111,
    },
    {
        name: "admin_fee",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2141,
    },
    {
        name: "owner",
        outputs: [{ type: "address", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2171,
    },
    {
        name: "lp_token",
        outputs: [{ type: "address", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2201,
    },
    {
        name: "initial_A",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2231,
    },
    {
        name: "future_A",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2261,
    },
    {
        name: "initial_A_time",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2291,
    },
    {
        name: "future_A_time",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2321,
    },
    {
        name: "admin_actions_deadline",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2351,
    },
    {
        name: "transfer_ownership_deadline",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2381,
    },
    {
        name: "future_fee",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2411,
    },
    {
        name: "future_admin_fee",
        outputs: [{ type: "uint256", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2441,
    },
    {
        name: "future_owner",
        outputs: [{ type: "address", name: "" }],
        inputs: [],
        stateMutability: "view",
        type: "function",
        gas: 2471,
    },
];
